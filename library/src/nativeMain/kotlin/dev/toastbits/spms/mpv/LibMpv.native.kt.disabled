package dev.toastbits.spms.mpv

actual class MpvHandle

actual class LibMpv private constructor() {
    actual companion object {
        actual fun isAvailable(): Boolean = false

        actual fun create(throw_on_fail: Boolean): LibMpv? =
            if (throw_on_fail) throw RuntimeException("spmp-server was compiled without support for mpv")
            else null
    }

    init {
        throw IllegalAccessException()
    }

    actual fun create(): MpvHandle? = throw IllegalAccessException()
    actual fun terminateDestroy(handle: MpvHandle) = throw IllegalAccessException()
    actual fun initialize(handle: MpvHandle): Int = throw IllegalAccessException()
    actual fun command(handle: MpvHandle, args: Array<String?>): Int = throw IllegalAccessException()
    actual inline fun <reified T> getProperty(handle: MpvHandle, name: String): T = throw IllegalAccessException()
    actual fun getPropertyString(handle: MpvHandle, name: String): String? = throw IllegalAccessException()
    actual inline fun <reified T> setProperty(handle: MpvHandle, name: String, data: T?): Int = throw IllegalAccessException()
    actual fun setPropertyString(handle: MpvHandle, name: String, data: String): Int = throw IllegalAccessException()
    actual inline fun <reified T> setOption(handle: MpvHandle, name: String, data: T?): Int = throw IllegalAccessException()
    actual fun setOptionString(handle: MpvHandle, name: String, data: String): Int = throw IllegalAccessException()
    actual fun observeProperty(handle: MpvHandle, reply_userdata: Long, name: String, format: Int): Int = throw IllegalAccessException()
    actual fun waitEvent(handle: MpvHandle, timeout: Double): MpvEvent = throw IllegalAccessException()
    actual fun requestLogMessages(handle: MpvHandle, min_level: String): Int = throw IllegalAccessException()
    actual fun hookAdd(handle: MpvHandle, reply_userdata: Long, name: String, priority: Int): Int = throw IllegalAccessException()
    actual fun hookContinue(handle: MpvHandle, id: Long): Int = throw IllegalAccessException()
}
